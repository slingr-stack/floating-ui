"use strict";

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
!function (t, e) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? e(exports) : "function" == typeof define && define.amd ? define(["exports"], e) : e((t = "undefined" != typeof globalThis ? globalThis : t || self).FloatingUIUtils = {});
}(void 0, function (t) {
  "use strict";

  var e = ["top", "right", "bottom", "left"],
    n = ["start", "end"],
    o = e.reduce(function (t, e) {
      return t.concat(e, e + "-" + n[0], e + "-" + n[1]);
    }, []),
    i = Math.min,
    r = Math.max,
    c = Math.round,
    u = Math.floor,
    f = {
      left: "right",
      right: "left",
      bottom: "top",
      top: "bottom"
    },
    s = {
      start: "end",
      end: "start"
    };
  function a(t) {
    return t.split("-")[0];
  }
  function l(t) {
    return t.split("-")[1];
  }
  function g(t) {
    return "x" === t ? "y" : "x";
  }
  function p(t) {
    return "y" === t ? "height" : "width";
  }
  function d(t) {
    return ["top", "bottom"].includes(a(t)) ? "y" : "x";
  }
  function m(t) {
    return g(d(t));
  }
  function h(t) {
    return t.replace(/start|end/g, function (t) {
      return s[t];
    });
  }
  function x(t) {
    return t.replace(/left|right|bottom|top/g, function (t) {
      return f[t];
    });
  }
  function b(t) {
    return _objectSpread({
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    }, t);
  }
  t.alignments = n, t.clamp = function (t, e, n) {
    return r(t, i(e, n));
  }, t.createCoords = function (t) {
    return {
      x: t,
      y: t
    };
  }, t.evaluate = function (t, e) {
    return "function" == typeof t ? t(e) : t;
  }, t.expandPaddingObject = b, t.floor = u, t.getAlignment = l, t.getAlignmentAxis = m, t.getAlignmentSides = function (t, e, n) {
    void 0 === n && (n = !1);
    var o = l(t),
      i = m(t),
      r = p(i);
    var c = "x" === i ? o === (n ? "end" : "start") ? "right" : "left" : "start" === o ? "bottom" : "top";
    return e.reference[r] > e.floating[r] && (c = x(c)), [c, x(c)];
  }, t.getAxisLength = p, t.getExpandedPlacements = function (t) {
    var e = x(t);
    return [h(t), e, h(e)];
  }, t.getOppositeAlignmentPlacement = h, t.getOppositeAxis = g, t.getOppositeAxisPlacements = function (t, e, n, o) {
    var i = l(t);
    var r = function (t, e, n) {
      var o = ["left", "right"],
        i = ["right", "left"],
        r = ["top", "bottom"],
        c = ["bottom", "top"];
      switch (t) {
        case "top":
        case "bottom":
          return n ? e ? i : o : e ? o : i;
        case "left":
        case "right":
          return e ? r : c;
        default:
          return [];
      }
    }(a(t), "start" === n, o);
    return i && (r = r.map(function (t) {
      return t + "-" + i;
    }), e && (r = r.concat(r.map(h)))), r;
  }, t.getOppositePlacement = x, t.getPaddingObject = function (t) {
    return "number" != typeof t ? b(t) : {
      top: t,
      right: t,
      bottom: t,
      left: t
    };
  }, t.getSide = a, t.getSideAxis = d, t.max = r, t.min = i, t.placements = o, t.rectToClientRect = function (t) {
    return _objectSpread(_objectSpread({}, t), {}, {
      top: t.y,
      left: t.x,
      right: t.x + t.width,
      bottom: t.y + t.height
    });
  }, t.round = c, t.sides = e;
});